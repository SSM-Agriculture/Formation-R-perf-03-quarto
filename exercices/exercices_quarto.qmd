---
title: "Exercices Quarto"
date-modified: today
css: ../styles/exercices.css
format: 
  html:
    self-contained: true
    code-fold: true
    code-tools: true
    number-sections: true
    smooth-scroll: true
    output-file: exercices_corriges_quarto.html
  pdf: 
    output-file: exercices_corriges_quarto.pdf
  typst: 
    output-file: exercices_corriges_quarto.pdf
crossref:
  fig-prefix: figure
  fig-title:  Figure
  tbl-prefix: tableau
  tbl-title:  Tableau
  title-delim: " &ndash; "
toc: true
always_allow_html: true
editor: source
lang: fr
editor_options: 
  chunk_output_type: console
execute: 
  eval: true
  echo: true
  warning: false
---

```{r}
#| label: setup
#| echo: true

library(readr)
library(dplyr)
```


## Présentation des données {.unnumbered}

```{r}
#| label: donnees
#| echo: true

ra <- read_rds("donnees/ra_2020.rds") 
```


## Découvrir l'interface {#interface}

- `Fichier` \> `Nouveau projet` \> `Nouveau répertoire` \> `Projet Quarto` \>
- choisir un répertoire, par exemple : *formation* dans *~*  
- moteur <kbd>knitr</kbd>

ou, dans un projet existant : 

- `Fichier` \> `Nouveau fichier` \> `R Quarto document`

Basculer successivement sur l'éditeur texte brut / [WYSIWYM](https://en.wikipedia.org/wiki/WYSIWYM)[^wysiwym]

[^wysiwym]: What You See Is What You Mean

Tricoter le document

## Produire un document simple {#doc-simple}

### Formater du texte

- Nouveau document Quarto
- Insérer du [texte](https://fr.lipsum.com/feed/html)
- Insérer des titres de différent niveau
- Passer en gras, italique
- Insérer une image
- Faire une liste

Tricoter le document.

## Code {#code}


## Afficher un tableau {#tableau}

### Tibble brut

```{r}
#| label: tbl-ra-brut

ra
```

### HTML mis en forme

::: {.panel-tabset}

#### gt

```{r}
#| label: tbl-ra-gt

library(gt)

ra |> 
  slice_head(n = 5) |> 
  gt()
```

#### knitr

```{r}
#| label: tbl-ra-knitr

library(knitr)

ra |> 
  slice_head(n = 5) |> 
  kable()
```
:::

#### Interactif

Javascript avec datatable

```{r}
#| label: tbl-ra-dt
#| eval: !expr knitr::is_html_output() 

library(DT)

ra |> 
  slice_head(n = 100) |> 
  datatable(
    options = list(
      language = list(
        url = "https://cdn.datatables.net/plug-ins/1.10.11/i18n/French.json")))
```

::: {.content-visible when-format="pdf"}
Tableau interactif non-visualisable au format PDF.
:::

## Graphiques


## HTML avec éléments interactifs


## PDF


## Tableau de bord


## Rapports paramétrés


## Méta {.appendix .unnumbered}

```{r}
#| label: source-et-forge
#| echo: false
#| warning: false

meta_qmd_source <- xfun::with_ext(knitr::current_input(dir = TRUE), "qmd") |> 
  stringr::str_replace("/var/data/nfs", "~")

meta_remote <- system("git remote -v", intern = TRUE)
meta_url <- if (any(grep(pattern = "^origin", x = meta_remote))) {
  meta_i <- grep(pattern = "^origin.*\\s\\(fetch\\)", x = meta_remote)
  gsub("(\\.git)?\\s\\(fetch\\)", "", strsplit(meta_remote[meta_i], "\\t")[[1]][[2]])
} else {
  ""
}
```

Ce document est produit par :  
  *`r meta_qmd_source`*
  
```{r}
#| label: afficher-forge
#| eval: !expr meta_url != ""
#| echo: false
#| results: asis

cat("### Dépôt Git {.appendix .unnumbered}

Ce projet est versionné dans :  
[", meta_url, "](", meta_url, ")")
```


